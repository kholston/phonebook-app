{"version":3,"sources":["services/persons.js","components/Header.js","components/PersonForm.js","components/Search.js","components/Person.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","Header","text","PersonForm","addPerson","handleNameChange","handleNumberChange","name","number","onSubmit","onChange","value","type","Search","handleFilterChange","Person","person","handleDelete","onClick","Notification","message","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","notificationMessage","setNotificationMessage","notificationType","setNotificationType","useEffect","personService","initalPersons","createNotificationMessage","setTimeout","personsToShow","toLowerCase","includes","event","target","preventDefault","returnedPerson","concat","map","personObject","window","confirm","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf64cf32.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response=> response.data)\n}\n\nexport default {\n  getAll,\n  create,\n  deletePerson,\n  update\n}\n\n","import React from 'react'\n\nconst Header = ({text}) =>{\n  return( <h2>{text}</h2> )\n}\n\nexport default Header","import React from 'react'\n\nconst PersonForm = ({addPerson, handleNameChange, handleNumberChange,name, number}) =>{\n  return(\n    <form onSubmit={addPerson}>\n        <div>\n          name: <input onChange={handleNameChange} value={name}/>\n        </div>\n        <div>\n          number: <input onChange={handleNumberChange} value={number} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\n\nconst Search = ({handleFilterChange, value}) => {\n return(\n  <div>\n    filter shown with <input onChange={handleFilterChange} value={value} />\n  </div>\n )\n}\n\nexport default Search","import React from 'react'\n\nconst Person = ({person, handleDelete}) => {\n  return(\n    <div>\n      {person.name} {person.number}\n      <button onClick={handleDelete}>delete</button>\n    </div>\n  )\n}\n\nexport default Person","import React from 'react'\n\nconst Notification = ({type, message}) => {\n  if(message === null) {\n    return null\n  }\n\n  return(\n    <div className={type === 1 ? \"success\" : \"error\"}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Header from './components/Header'\nimport PersonForm from './components/PersonForm'\nimport Search from './components/Search'\nimport Person from './components/Person'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [notificationType, setNotificationType] = useState(0)\n\n  useEffect(()=>{\n    personService\n      .getAll()\n      .then(initalPersons =>{\n        setPersons(initalPersons)\n      })\n  },[])\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const personObject = {name: newName, number: newNumber}\n   \n    personService\n      .create(personObject)\n      .then(returnedPerson =>{\n        setPersons(persons.concat(returnedPerson))\n        const message = `${returnedPerson.name} created successfully!`\n        createNotificationMessage(1,message)\n        setNewName('')\n        setNewNumber('')\n      })\n    \n  } \n\n  const deletePerson = (personObject) => {\n    window.confirm(`Delete ${personObject.name} ?`)\n    personService\n      .deletePerson(personObject.id)\n      .then(\n        setPersons(persons.filter(p => p.id !== personObject.id))\n      )\n  }\n\n  const updatePerson = (changedPerson) => {\n    personService\n      .update(changedPerson.id, changedPerson)\n      .then(returnedPerson => {\n        setPersons(persons.map(person => person.id !== returnedPerson.id ? person : returnedPerson))\n        const message = `${changedPerson.name} updated successfully!`\n        createNotificationMessage(1,message)\n      })\n      .catch(error => {\n        const message = `${changedPerson.name} was already deleted from the server`\n        createNotificationMessage(2,message)\n        setPersons(persons.filter(p => p.id !== changedPerson.id))\n      })\n  }\n\n  const createNotificationMessage = (type, message) => {\n    setNotificationType(type)\n    setNotificationMessage(message)\n    debugger\n    setTimeout(()=>{\n      setNotificationType(0)\n      setNotificationMessage(null)\n    },5000)\n  }\n\n\n\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) =>{\n    setFilter(event.target.value)\n  }\n\n  const personsToShow =  filter === '' ? persons : \n    persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()) )\n    \n\n  return (\n    <div>\n      <Header text='Phonebook' />\n      <Notification message={notificationMessage} type={notificationType}/>\n      <Search handleFilterChange={handleFilterChange} value={filter}/>\n      <Header text='Add New'/>\n      <PersonForm addPerson={addPerson} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} name={newName} number={newNumber}/>\n      <Header text='Numbers'/>\n      {personsToShow.map(person => <Person key={person.name} person={person} handleDelete={() => deletePerson(person)}/>)}   \n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}